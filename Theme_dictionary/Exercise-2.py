# -------------------------------------= Задача 2. Словарь терминов. =--------------------------------------------------
# •	Создать  IT словарь,где 4-5 термина
# •	Создать меню:
#       1. Все данные
#       2. Поиск
#       3. Добавление нового термина
#       4. Изменить определение термина
#       5. Удалить термин
# ----------------------------------------------------------------------------------------------------------------------


# -------------------------------------= Функция Меню =-------------------------------------
def Menu():
    '''Функция выводит на экран пункты меню, предлагает пользователю выбрать пункт, предусмотрена проверка вводимых данных'''
    print()
    print('-------------------------------------= МЕНЮ: =-------------------------------------------')
    print('1. Все данные',
          '2. Поиск',
          '3. Добавление нового термина',
          '4. Изменить определение термина',
          '5. Удалить термин',
          '0. Выход из словаря',
          '-----------------------------------------------------------------------------------------',
          sep='\n')

    while True:
        try:
            UserChoice = int(input('Укажите пункт меню: '))
            if UserChoice not in range(6):
                raise Exception
        except ValueError:
            print("Введены некорректные данные")
        except Exception:
            print("Введены некорректные данные")
        else:
            return UserChoice
            break

# -------------------------------------= Функция вывода словаря =-------------------------------------
def AllData(dictionary):
    '''На вход функции поступает словарь. Функция выводит на экран содержимое словаря'''

    print('Словарь содержит следующие термины: ')
    for i in dictionary:
        print("\033[36m{}\033[0m".format(i), '-', dictionary[i])


# -------------------------------------= Функция поиска термина =-------------------------------------
def Search(dictionary):
    '''На вход функции поступает словарь. Функция выводит на экран список терминов словаря и предалагет пользователю
    выбрать, определеие какого термина показать.
    Функция выводит на экран определение введенного термина. Если данного термина в словаре нет, выводится
    соответствующее сообщение'''

    print('Словарь содержит темины:')
    print()
    ListWords = dictionary.keys()
    for i in ListWords:
        print(i)
    print()
    word = input('Значение какого термина показать?: ').capitalize()
    print(dictionary.get(word), 'Такого термина в словаре нет')

# -------------------------------------= Функция добавления термина =-------------------------------------
def AddWord(dictionary, word):
    '''Функция добавления термина в словарь.
    На вход функции поступает словарь и термин. Осуществляется проверка наличия термина в словаре.
    Если термин словаре есть, то пользователю предлагается изменить определение термина, иначе запрашивается
    ввести определение термина. Термин и определение записываются в словарь.'''

    if word == 'default':
        word = input('Какой термин хотите добавить?: ').capitalize()

    if word in dictionary.keys():
        print('Такой термин уже есть в словаре')
        while True:
            UserChoice = input('Хотите изменить определение данного термина? д/н: ').lower()
            if UserChoice == 'д':
                UpdateWord(dictionary, word)
                break
            elif UserChoice == "н":
                break
    else:
        description = input('Введите определение: ')
        dictionary.update([(word, description)])
        print('В словарь добавлен термин: ')
        print(f'{word} - {dictionary.get(word)}')


def UpdateWord(dictionary, word):
    '''Функция обновления опредления термина.
    На вход функции поступает словарь и термин. Осуществляется проверка наличия термина в словаре.
    Если термин словаре нет, то пользователю предлагается добавить этот термин в словарь, иначе запрашивается новое
    определение термина. Изменения вносятся в словарь'''

    if word == 'default':
        word = input('Какой термин хотите изменить?: ').capitalize()
    if word not in dictionary.keys():
        print('Такого термина в словаре нет')
        while True:
            UserChoice = input('Хотите добавить этот термин в словарь? д/н: ').lower()
            if UserChoice == 'д':
                AddWord(dictionary, word)
                break
            elif UserChoice == "н":
                break
    else:
        print('Текущее определение: ', dictionary.get(word))
        description = input('Введите определение: ')
        dictionary.update([(word, description)])
        print('Термин обновлен: ')
        print(f'{word} - {dictionary.get(word)}')


def DeleteWord(dictionary):
    '''Функция удаления термина из словаря.
    На вход функции поступает словарь. Запрашиается термин для удаления, если указанный термин есть в словаре, то
    происходит его удаление. Иначе изменений в словаре нет.'''
    word = input('Какой термин хотите удалить?: ').capitalize()
    if word not in dictionary.keys():
        print("\033[31m{}\033[0m" .format('Такого термина в словаре нет'))
        AllData(dictionary)
    else:
        dictionary.pop(word, 'none')
        print("Термин", "\033[36m{}\033[0m" .format(word), "удален")


# -------------------------------------= MAIN =-------------------------------------
DictionaryTesting = dict([
    ('Эффект пестицида', 'это эффект, при котором при регулярном прогоне тестовых сценариев ошибки перестают находиться'),
    ('Bug report', 'это документ, описывающий ситуацию или последовательность действий, приведшую к некорректной работе объекта тестирования с указанием причин и ожидаемого результата'),
    ('Test case', 'это артефакт, описывающий совокупность шагов, конкретных условий и параметров, необходимых для проверки реализации тестируемой функции или её части'),
    ('Test design', 'это этап процесса тестирования ПО, на котором проектируются и создаются тестовые случаи (тест-кейсы), в соответствии с определенными ранее критериями качества и целями тестирования'),
    ('Software testing', 'это одна их техник контроля качества, включающая в себя активности по планированию работ, проектированию тестов, выполнению тестов и анализу полученных результатов'),
    ('Test plan', 'это документ, который описывает весь объем работ по тестированию, начиная с описания объекта, стратегии, расписания, критериев начала и окончания тестирования до необходимого в процессе работы оборудования, специальных знаний, а также оценки рисков с вариантами их разрешения'),
    ('Контроль качества', 'это совокупность действий, проводимых над продуктом в процессе разработки для получения информации о его актуальном состоянии'),
])
output = False

while output == False:
    UserChoice = Menu()
    print(f'Ваш выбор: {UserChoice}')
    print()

    match UserChoice:
        case 0:
            print('До свидания!')
            output = True
        case 1:
            AllData(DictionaryTesting)
        case 2:
            Search(DictionaryTesting)
        case 3:
            AddWord(DictionaryTesting, 'default')
        case 4:
            UpdateWord(DictionaryTesting, 'default')
        case 5:
            DeleteWord(DictionaryTesting)
